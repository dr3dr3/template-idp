name: ON-PUSH-SPECIFICATION
run-name: Specification Change ( Triggered by ${{ github.event_name }} and run by ${{ github.actor }} )

on:
  workflow_dispatch:
  push:
    branches:
      - main
    paths:
      - 'specification/**/*.yml'

permissions:
  contents: none

jobs:

  # status-checks:
  #   name: Status checks
  #   runs-on: ubuntu-latest
  #   permissions:
  #     contents: none

  #   steps:
      
  #     - name: Checkout
  #       uses: actions/checkout@v4

  #     - name: Setup Node
  #       uses: actions/setup-node@v4

  #     - name: Install Node dependencies
  #       run: npm install

  #     - name: Schema validation
  #       id: schema-validation
  #       run: .github/actions-scripts/schema-validation.mjs

  define-matrix:
    name: Define matrix using specs + template-repos
    runs-on: ubuntu-latest
    permissions:
      contents: read
    outputs:
      matrix: ${{ steps.set-matrix-added.outputs.MATRIX }}

    steps:

      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 2

      - name: Get changed specs
        id: changed-specs
        uses: tj-actions/changed-files@v45
        with:
          files: specification/**

      - name: Matrix set for added files
        id: set-matrix-added
        env:
          ADDED_FILES: ${{ steps.changed-specs.outputs.added_files }}
        run: |
          JSON=$(jq -n '[]')
          echo $ADDED_FILES
          for file in ${ADDED_FILES}; do
            while read i; do
              PREFIX=$(yq '.solution.prefix' $file -r)
              ROUTE=$(echo $i | jq -r '.route')
              RN="${PREFIX}-${ROUTE}"
              RD=$(yq '.solution.description' $file -r)
              TN=$(echo $i | jq -r '.repoName')
              TO=$(echo $i | jq -r '.repoOwner')
              BS=$(echo $i | jq -r '.branchingStrategy')
              ST=$(tn=$TN yq '.repositories.[] | select(.repoName == env(tn))' configuration/repo/repo-templates.yml -o=json | jq -r '.serviceType')
              TD=$(tn=$TN yq '.repositories.[] | select(.repoName == env(tn))' configuration/repo/repo-templates.yml -o=json | jq -r '.name')
              JSON=$(echo $JSON | jq \
                --arg repoName "$RN" \
                --arg repoDesc "$RD ($TD)" \
                --arg route "$ROUTE" \
                --arg branchingStrategy "$BS" \
                --arg serviceType "$ST" \
                '. += [$ARGS.named]')
            done < <(yq '.solution.services.fromTemplate[]' $file -o=json | jq -c)
          done
          matrix=$(echo $JSON | jq -c)
          echo $matrix
          echo "MATRIX=$matrix" >> $GITHUB_ENV

  create-repositories:
    name: Create repositories from matrix
    needs: [define-matrix]
    if: ${{ needs.define-matrix.outputs.matrix != '' }}
    strategy:
      matrix: 
        REPOS: ${{ needs.define-matrix.outputs.matrix }}
    uses: dr3dr3/core-ops/.github/workflows/github-repositories-changes.yml@main 
    with:
      repoName: ${{ matrix.REPOS.repoName }}
      repoDesc: ${{ matrix.REPOS.repoDesc }}
      templateRepoOwner: ${{ matrix.REPOS.templateRepoOwner }}
      templateRepoName: ${{ matrix.REPOS.templateRepoName }}
      branchingStrategy: ${{ matrix.REPOS.branchingStrategy }}
      enableGitHubPages: ${{ matrix.REPOS.enableGitHubPages }}
    permissions:
      contents: write
    secrets: inherit
